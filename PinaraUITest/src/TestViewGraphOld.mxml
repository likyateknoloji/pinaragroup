<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:ravis="org.un.cava.birdeye.ravis.graphLayout.visual.*"
			   creationComplete="init();"
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600">
	<fx:Script>
		<![CDATA[
			import mx.logging.Log;
			import mx.logging.LogEventLevel;
			import mx.logging.targets.TraceTarget;
			
			import org.un.cava.birdeye.ravis.assets.icons.EmbeddedIcons;
			import org.un.cava.birdeye.ravis.components.renderers.edgeLabels.DefaultEdgeLabelRenderer;
			import org.un.cava.birdeye.ravis.components.renderers.nodes.IconNodeRenderer;
			import org.un.cava.birdeye.ravis.graphLayout.data.Graph;
			import org.un.cava.birdeye.ravis.graphLayout.layout.HierarchicalLayouter;
			import org.un.cava.birdeye.ravis.graphLayout.visual.edgeRenderers.DirectedArrowEdgeRenderer;
			
			/* Init function, initiates the HTTP
			* request. All further initalisation is done
			* in the event handler for the HTTP Service */
			private function init():void {
				initLogging();
				initData();
			}
			
			/**
			 * event handler for HTTPService, does all the remaining required
			 * initialisation */
			private function initData():void {
				
				/* init a graph object with the XML data */
				vgraph.graph = new Graph("XMLAsDocsGraph", false, xmldata);
				
				/* assign start root */
				vgraph.currentRootVNode = vgraph.graph.nodeByStringId("2").vnode;
				
				/* provide the control components with some initial settings */
				// myLayoutSelector.selectedItem = "ConcentricRadial";
				// myLayoutSelector.changeLayouter();
				
				vgraph.layouter = new HierarchicalLayouter(vgraph);
				
				// myNodeRendererSelector.selectedItem = "Icons";
				// myNodeRendererSelector.changeNodeRenderer();
				
				vgraph.itemRenderer = new ClassFactory(IconNodeRenderer);
				
				// myEdgeRendererSelector.selectedItem = "Default";
				// myEdgeRendererSelector.changeEdgeRenderer();
				
				vgraph.edgeRendererFactory = new ClassFactory(DirectedArrowEdgeRenderer);
				
				// myELCs.elselector.selectedItem = "Default";
				// myELCs.elselector.changeEdgeLabelRenderer();
				
				vgraph.edgeLabelRenderer = new ClassFactory(DefaultEdgeLabelRenderer);
				
				// myDegreeOS.updateMaxVisDist();
				
				vgraph.maxVisibleDistance = 2;
				
				/* the following kicks it off .... */
				vgraph.draw();
			}
			
			private function initLogging():void {
				const target:TraceTarget = new TraceTarget();
				
				/* can specify a certain subset of categories/classes to log */
				//target.filters = ["components.*", "graphLayout.*"];
				
				/* can specify logging parameters */
				target.includeDate = false;
				target.includeTime = false;
				target.includeCategory = false; // Category = "ravis"
				target.includeLevel = true;
				target.level = LogEventLevel.DEBUG;
				Log.addTarget(target);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:XML id="xmldata" source="/Users/serkan/Documents/Adobe Flash Builder 4.7/RavisExamples/src/data/pinara.xml"/>
	</fx:Declarations>

	<fx:Style source="styles/main.css" />
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
		
		<mx:VBox width="1024" height="100%" verticalGap="10" >
			
			<mx:HBox id="DivNavRB" width="100%" height="100%" paddingBottom="5" horizontalGap="5">
				<mx:HBox id="sideBar" width="300" height="100%" horizontalGap="0" >
					<mx:VBox id="NavContainerRB"
							 horizontalScrollPolicy="off"
							 verticalScrollPolicy="off"
							 verticalAlign="middle"
							 horizontalAlign="center"
							 verticalGap="1"
							 horizontalGap="0"
							 width="100%"
							 height="100%">
						<mx:Accordion id="leftAccordion"
									  paddingBottom="5"
									  paddingRight="5"
									  paddingTop="5"
									  paddingLeft="5"
									  horizontalScrollPolicy="off"
									  verticalScrollPolicy="off"
									  width="100%"
									  height="100%"
									  creationPolicy="all" >
							<mx:Canvas id="visibilitycnvs"
									   label="Controls"
									   height="100%"
									   width="100%"
									   horizontalScrollPolicy="off"
									   verticalScrollPolicy="off" >
								<mx:VBox width="100%"
										 height="100%"
										 horizontalAlign="center"
										 horizontalScrollPolicy="off"
										 verticalScrollPolicy="off">
									<mx:Spacer height="3" />
									<mx:Spacer height="5" />
								</mx:VBox>		
							</mx:Canvas>
						</mx:Accordion>
					</mx:VBox>		
				</mx:HBox>
				
				<!-- Graph Panel -->
				
				<mx:Canvas id="graphCnvs"
						   borderStyle="solid"
						   borderColor="#CCCCCC"
						   backgroundColor="#FFFFFF"
						   width="100%"
						   height="100%"
						   verticalScrollPolicy="off">		
					
					<ravis:VisualGraph id="vgraph" width="100%" height="100%" 
									   left="0" right="0" top="0" bottom="5" backgroundColor="#FFFFFF" alpha="1"
									   resize="vgraph.draw(VisualGraph.DF_RESET_LL)"
									   visibilityLimitActive="true"
									   >
					</ravis:VisualGraph>
				</mx:Canvas>
				<!-- End of Graph Panel -->
			</mx:HBox>
		</mx:VBox>
	</mx:VBox>
</s:Application>
