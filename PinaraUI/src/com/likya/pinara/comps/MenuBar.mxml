<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="27" creationComplete="onCreationComplete()" xmlns:jobmanager="com.likya.pinara.services.jobmanager.*">
	
	<fx:Script>
		<![CDATA[
			import com.likya.pinara.event.ResourceEvent;
			import com.likya.pinara.model.UserRole;
			
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.controls.menuClasses.MenuBarItem;
			import mx.events.CloseEvent;
			import mx.events.MenuEvent;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.TitleWindow;
			
			[Bindable]
			public var tlosMenuData:XMLListCollection = new XMLListCollection();
			
			private var timerId:uint;
			
			public function onCreationComplete():void {
				tlosMenuData.source = menuDataXMLList;
				pinaraMenuBar.callLater(registerClickEvent);
			}
			
			protected function tlosMenuBar_itemClickHandler(event:MenuEvent):void {
				var userRole:UserRole = null;
				
				var warningStr:String = resourceManager.getString("messages", "warning");
				Alert.okLabel = resourceManager.getString("messages", "yesLabel");
				Alert.cancelLabel = resourceManager.getString("messages", "cancelLabel");
				
				if (event.label == resourceManager.getString("messages", "aboutTlos")) {
					var aboutWindow:TitleWindow = PopUpManager.createPopUp(this, AboutForm, true) as TitleWindow;
					PopUpManager.centerPopUp(aboutWindow);
					aboutWindow.setFocus();
				} else if (event.label == resourceManager.getString("messages", "userGuide")) {
					var urlRequest:URLRequest = new URLRequest("https://likyateknoloji.atlassian.net/wiki/display/DT1/Doc+%3A+TlosLite+1.8.1");
					navigateToURL(urlRequest, "_blank");
				} else if (event.label == resourceManager.getString("messages", "pinaraProperties")) {
					showPinaraConfigPopup();
				} else if (event.label == resourceManager.getString("messages", "myraProperties")) {
					showMyraConfigPopup();
				} else if (event.label == resourceManager.getString("messages", "senaryoFile")) {
					showSenaryoPopup();
				} else if (event.label == resourceManager.getString("messages", "myraLog")) {
					showMyraLogPopup();
				} else if (event.label == resourceManager.getString("messages", "pinaraLog")) {
					showPinaraLogPopup();
				} else if (event.label == resourceManager.getString("messages", "pinaraEkran")) {
					showPinaraEkranLogPopup();
				} else if (event.label == resourceManager.getString("messages", "suspendApp")) {
					// suspendApp();
					Alert.show("Uygulama beklemeye alınacak, emin misiniz ?", warningStr, Alert.OK|Alert.CANCEL, this, suspendApp, null, Alert.CANCEL);
				} else if (event.label == resourceManager.getString("messages", "resumeApp")) {
					// resumeApp();
					Alert.show("Uygulama beklemeden çıkarılacak, emin misiniz ?", warningStr, Alert.OK|Alert.CANCEL, this, resumeApp, null, Alert.CANCEL);
				} else if (event.label == resourceManager.getString("messages", "shutdownNormal")) {
					// shutdownNormal();
					Alert.show("Uygulama normal kapatılacak, emin misiniz ?", warningStr, Alert.OK|Alert.CANCEL, this, shutdownNormal, null, Alert.CANCEL);
				} else if (event.label == resourceManager.getString("messages", "shutdownForce")) {
					// shutdownForce();
					Alert.show("Uygulama koşulsuz kapatılacak, emin misiniz ?", warningStr, Alert.OK|Alert.CANCEL, this, shutdownForce, null, Alert.CANCEL);
				}

			}
			
			protected function mbiAnaSayfa_click(event:MouseEvent):void {
				dispatchEvent(new ResourceEvent(ResourceEvent.ANASAYFA));
			}
			
			protected function mbiRefresh_click(event:MouseEvent):void {
				var ret:Boolean = dispatchEvent(new ResourceEvent(ResourceEvent.REFRESH, null, true));
			}
			
			protected function registerClickEvent():void {
				var mbi:MenuBarItem = pinaraMenuBar.menuBarItems[0] as MenuBarItem;
				//Alert.show("registerClickEvent : pinaraMenuBar.menuBarItems.length" + pinaraMenuBar.menuBarItems.length);
				mbi.addEventListener(MouseEvent.CLICK, mbiAnaSayfa_click);
				mbi = pinaraMenuBar.menuBarItems[1] as MenuBarItem;
				mbi.addEventListener(MouseEvent.CLICK, mbiRefresh_click);
			}
			
			private function showPinaraConfigPopup():void {
				showGenericPopup("infotag=pinaraConfig");
			}
			
			private function showMyraConfigPopup():void {
				showGenericPopup("infotag=myraConfig");
			}
			
			private function showSenaryoPopup():void {
				showGenericPopup("infotag=myraSenaryo");
			}
			
			private function showMyraLogPopup():void {
				showGenericPopup("infotag=myraLog");
			}
			
			private function showPinaraLogPopup():void {
				showGenericPopup("infotag=pinaraLog");
			}
			
			private function showPinaraEkranLogPopup():void {
				showGenericPopup("infotag=pinaraEkran");
			}

			private function suspendApp(eventObj:CloseEvent):void {
				if(eventObj.detail == Alert.OK) {
					suspendAppResult.token = jobManagerService.suspendapp();
				}
			}

			private function resumeApp(eventObj:CloseEvent):void {
				if(eventObj.detail == Alert.OK) {
					resumeAppResult.token = jobManagerService.resumeapp();
				}
			}

			private function shutdownNormal(eventObj:CloseEvent):void {
				if(eventObj.detail == Alert.OK) {
					shutdownNormalResult.token = jobManagerService.stopapp();
				}
			}
			
			private function shutdownForce(eventObj:CloseEvent):void {
				if(eventObj.detail == Alert.OK) {
					shutdownForceResult.token = jobManagerService.fstopapp();
				}
			}

			private function showGenericPopup(fileTag:String):void {
				var fileViewWindow:FileViewPopup = PopUpManager.createPopUp(parentApplication as DisplayObject, FileViewPopup, true) as FileViewPopup;
				fileViewWindow.isNativeXML = true;
				fileViewWindow.fileTag = fileTag; //"joblog=" + jobDetailLocalXml.@Id;
				PopUpManager.centerPopUp(fileViewWindow);
				fileViewWindow.setFocus();
			}
			
			protected function jobManagerService_resultHandler(event:ResultEvent):void {
				var returnXml:XML;
				var returnTxt:String = null;
				
				try {
					returnXml = XML(event.result);
				} catch(err:Error) {
					returnTxt = String(event.result)
				}
			}
			
			protected function jobManagerService_faultHandler(event:FaultEvent):void {
				Alert.show("Fault : " + event.message);	
			}
			
			protected function suspendAppResult_resultHandler(event:ResultEvent):void {
				// Alert.show(String(event.result));
				if(String(event.result) == "OK") {
					// trace(XML(menuDataXMLList[3]).children()[0].@label);
					XML(menuDataXMLList[3]).children()[0].@label = ResourceManager.getInstance().getString('messages', 'resumeApp');
					XML(menuDataXMLList[3]).children()[0].@id = "resumeApp";
					// trace(XML(menuDataXMLList[3]).children()[0].@label);
					// trace(XML(menuDataXMLList[3]).children()[0].@id);
				}
				
			}
			
			protected function resumeAppResult_resultHandler(event:ResultEvent):void {
				// Alert.show(String(event.result));
				if(String(event.result) == "OK") {
					XML(menuDataXMLList[3]).children()[0].@label = ResourceManager.getInstance().getString('messages', 'suspendApp');
					XML(menuDataXMLList[3]).children()[0].@id = "suspendApp";
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<fx:XMLList id="menuDataXMLList">
			<menuitem label="Ana Sayfa" id="anasayfa"/>
			<menuitem label="{resourceManager.getString('messages', 'refresh')}" id="refresh"/>
			<menuitem label="{resourceManager.getString('messages', 'configFiles')}" id="configfiles" role="{UserRole.VIEW}">			
				<menuitem label="{resourceManager.getString('messages', 'pinaraProperties')}" id="pinaraProperties"/>			
				<menuitem label="{resourceManager.getString('messages', 'myraProperties')}" id="myraProperties"/>
				<menuitem label="{resourceManager.getString('messages', 'senaryoFile')}" id="scenarioFile"/>			
				<menuitem label="{resourceManager.getString('messages', 'myraLog')}" id="myraLog"/>
				<menuitem label="{resourceManager.getString('messages', 'pinaraLog')}" id="pinaraLog"/>
				<menuitem label="{resourceManager.getString('messages', 'pinaraEkran')}" id="pinaraEkran"/>
			</menuitem>
			<menuitem label="{resourceManager.getString('messages', 'admin')}" id="admin" role="{UserRole.ADMIN}">
				<menuitem label="{resourceManager.getString('messages', 'suspendApp')}" id="suspendApp"/>
				<!--menuitem label="{resourceManager.getString('messages', 'resumeApp')}" id="resumeApp"/-->
				<menuitem label="{resourceManager.getString('messages', 'shutdownNormal')}" id="shutdownNormal"/>		
				<menuitem label="{resourceManager.getString('messages', 'shutdownForce')}" id="shutdownForce"/>
				<!--menuitem label="{resourceManager.getString('messages', 'addNewTlos')}" id="addNewTlos" />	
				<menuitem label="{resourceManager.getString('messages', 'manageTloses')}" id="manageTloses" />
				<menuitem label="{resourceManager.getString('messages', 'addNewUser')}" id="addNewUser" />
				<menuitem label="{resourceManager.getString('messages', 'manageUsers')}" id="manageUsers" /-->
			</menuitem>
			<menuitem label="{resourceManager.getString('messages', 'help')}" id="help" role="{UserRole.VIEW}">			
				<menuitem label="{resourceManager.getString('messages', 'userGuide')}"/>			
				<menuitem label="{resourceManager.getString('messages', 'aboutTlos')}"/>			
			</menuitem>
			
			<!--menuitem label="{resourceManager.getString('messages', 'userSettings')}" id="userSettings" role="{UserRole.VIEW}" >			
			<menuitem label="{resourceManager.getString('messages', 'changeUserPassword')}" />
			</menuitem-->
			<!--menuitem label="{resourceManager.getString('messages', 'management')}" id="management" role="{UserRole.OPERATION}">			
			<menuitem label="{resourceManager.getString('messages', 'suspendTlos')}" id="suspend"/>
			<menuitem label="{resourceManager.getString('messages', 'shutdownNormal')}" id="shutdownNormal"/>		
			<menuitem label="{resourceManager.getString('messages', 'shutdownForce')}" id="shutdownForce"/>				
			</menuitem-->		
			<!--menuitem label="{resourceManager.getString('messages', 'tlosSettings')}" id="security" role="{UserRole.ADMIN}">			
			<menuitem label="{resourceManager.getString('messages', 'changeTlosPassword')}" id="changeTlosPassword"/>			
			</menuitem-->	
			<!--menuitem label="{resourceManager.getString('messages', 'view')}" id="view" role="{UserRole.VIEW}">
			<menuitem label="{resourceManager.getString('messages', 'graph')}" id="graph"/>
			<menuitem label="{resourceManager.getString('messages', 'refresh')}" id="refresh"/>
			<menuitem label="{resourceManager.getString('messages', 'allJobsView')}" id="allJobsView"/>
			<menuitem label="{resourceManager.getString('messages', 'groupedView')}" id="groupedView"/>
			</menuitem-->
			<!--menuitem label="{resourceManager.getString('messages', 'statusFilter')}" id="statusFilter" role="{UserRole.VIEW}">
			<menuitem label="{resourceManager.getString('messages', 'listAll')}"/>			
			<menuitem label="{resourceManager.getString('messages', 'readyFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'waitingFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'workingFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'successfulFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'failedFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'timeoutFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'skippedFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'stoppedFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'pausedFilter')}"/>
			<menuitem label="{resourceManager.getString('messages', 'disabledFilter')}"/>
			</menuitem-->
			<!--menuitem label="{resourceManager.getString('messages', 'saveJobList')}" id="save" role="{UserRole.VIEW}">			
			<menuitem label="{resourceManager.getString('messages', 'saveJobListAsExcel')}"/>
			</menuitem-->
		</fx:XMLList>
		
		<jobmanager:JobManager id="jobManagerService" result="jobManagerService_resultHandler(event)" fault="jobManagerService_faultHandler(event)"/>
		<s:CallResponder id="suspendAppResult" result="suspendAppResult_resultHandler(event)"/>
		<s:CallResponder id="resumeAppResult" result="resumeAppResult_resultHandler(event)"/>
		<s:CallResponder id="shutdownNormalResult"/>
		<s:CallResponder id="shutdownForceResult"/>
		
	</fx:Declarations>
	
	
	<mx:MenuBar id="pinaraMenuBar" width="100%" chromeColor="#B4CBE1" color="#0D173C" 
				dataProvider="{tlosMenuData}" fontFamily="Arial" fontWeight="bold" horizontalCenter="0"
				itemClick="tlosMenuBar_itemClickHandler(event)" 
				labelField="@label" selectionColor="#A8C6EE"
				symbolColor="#F7F4F4"/>
	
</s:Group>